networks:
  n8n_net:

x-n8n: &service-n8n
  image: n8nio/n8n:latest
  networks: ['n8n_net']
  environment:
    - TZ=America/Sao_Paulo
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
    - OLLAMA_HOST=ollama:11434

services:
  postgres:
    image: postgres:16-alpine
    hostname: postgres
    networks: ['n8n_net']
    restart: unless-stopped
    environment:
      - TZ=America/Sao_Paulo
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n-import:
    <<: *service-n8n
    hostname: n8n-import
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows"
    volumes:
      - ./n8n/backup:/backup
    depends_on:
      postgres:
        condition: service_healthy

  n8n:
    <<: *service-n8n
    hostname: n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - 5678:5678
    environment:
      - TZ=America/Sao_Paulo
    volumes:
      - ./n8n/storage:/home/node/.n8n
      - ./n8n/backup:/backup
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully

  qdrant:
    image: qdrant/qdrant
    hostname: qdrant
    container_name: qdrant
    networks: ['n8n_net']
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - ./qdrant/storage:/qdrant/storage
    environment:
      - TZ=America/Sao_Paulo

  ollama:
      image: ghcr.io/open-webui/open-webui:ollama
      restart: unless-stopped
      container_name: ollama
      networks: ['n8n_net']
      volumes:
          - ./open-webui:/app/backend/data
          - ./ollama:/root/.ollama
      ports:
        - 8089:8080
        - 11434:11434
      environment:
        - TZ=America/Sao_Paulo
        - OLLAMA_HOST=ollama:11434

# Acessar o N8N em http://localhost:5678
# Acessar o Open-webui em http://localhost:8089